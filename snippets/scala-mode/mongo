# -*- mode: snippet -*-
# name: mongo
# key: mongo
# --

import cats.effect.IO
import hero.common.mongo.MongoRepository
import reactivemongo.api.DB

import scala.concurrent.ExecutionContext
import reactivemongo.api.bson.BSONDocument
import reactivemongo.api.bson.Macros.Annotations.Key

import hero.common.util.LazyFunctionK.implicits._

class Mongo$1Repository(db: DB)(implicit ec: ExecutionContext)
    extends MongoRepository[IO](db, Mongo$1Repository.collectionName)
    with $1Repository[IO] {

  import MongoWRs._
  import Mongo$1Repository._


}

object Mongo$1Repository {
 val collectionName = ""

  case class $1DTO(
      @Key("_id") id: String,
  ) {
    def toDomain: $1 =
      $1()
  }

  object $1DTO {

  }
}
